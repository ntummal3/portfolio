name: Deploy static content to Pages

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install jinja2 beautifulsoup4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create build directory and copy static files
        run: |
          mkdir -p _site
          cp -r static _site/
          
      - name: Generate static site
        run: |
          python -c "
          from app import app, portfolio_data
          from flask import render_template
          import os
          import shutil
          from bs4 import BeautifulSoup
          
          # Configure Flask for GitHub Pages paths
          app.config['PREFERRED_URL_SCHEME'] = 'https'
          app.config['SERVER_NAME'] = 'ntummal3.github.io'
          app.config['APPLICATION_ROOT'] = '/portfolio'
          
          with app.app_context():
              # Generate the main page
              html = render_template('index.html', data=portfolio_data)
              
              # Parse the HTML
              soup = BeautifulSoup(html, 'html.parser')
              
              # Fix static file paths
              for tag in soup.find_all(['link', 'script', 'img']):
                  if tag.get('href') and tag.get('href').startswith('/static/'):
                      tag['href'] = tag['href'].replace('/static/', '/portfolio/static/')
                  if tag.get('src') and tag.get('src').startswith('/static/'):
                      tag['src'] = tag['src'].replace('/static/', '/portfolio/static/')
              
              # Fix form action
              form = soup.find('form', {'class': 'contact-form'})
              if form:
                  form['action'] = '#contact'
                  
              # Write the modified HTML
              with open('_site/index.html', 'w', encoding='utf-8') as f:
                  f.write(str(soup))
          "
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 